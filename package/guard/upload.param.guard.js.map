{"version":3,"sources":["../src/guard/upload.param.guard.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,2CAAqF;AAIrF,yCAAyC;AAGzC,IAAa,gBAAgB,GAA7B;IACU,WAAW,CAAC,GAAG,EAAE,OAAyB;;YAE5C,IAAI,IAAI,GAAe,EAAS,EAAE,GAAG,GAAe,EAAS,CAAC;YAC9D,IAAI,EAAE,GAAQ,EAAE,CAAC;YACjB,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBAClC,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,YAAY,EAAE,CAAC;gBAC3C,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE;oBACnC,IAAI,GAAG,EAAE;wBACL,MAAM,CAAC,IAAI,sBAAa,CAAC,aAAa,GAAG,GAAG,CAAC,QAAQ,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;qBAClE;oBACD,IAAI,CAAC,MAAM,EAAE;wBACT,MAAM,CAAC,IAAI,sBAAa,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;qBAC7C;oBACD,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;wBACpB,MAAM,CAAC,IAAI,sBAAa,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC,CAAC;qBACpD;oBACD,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;wBACjB,MAAM,CAAC,IAAI,sBAAa,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,CAAC;qBACjD;oBACD,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;wBACb,MAAM,CAAC,IAAI,sBAAa,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;qBAC7C;oBACD,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;wBACvB,MAAM,CAAC,IAAI,sBAAa,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;qBAC7C;oBACD,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;oBAClB,GAAG,GAAG,MAAM,CAAC;oBACb,OAAO,EAAE,CAAC;oBACV,OAAO;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBACX,EAAE,GAAG,GAAG,CAAC;YACb,CAAC,CAAC,CAAC;YACH,IAAI,EAAE;gBAAE,MAAM,EAAE,CAAC;YACjB,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAC3B,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;YAC1B,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;CACJ,CAAA;AAvCY,gBAAgB;IAD5B,cAAK,EAAE;GACK,gBAAgB,CAuC5B;AAvCY,4CAAgB","file":"upload.param.guard.js","sourcesContent":["import { Guard, CanActivate, ExecutionContext, HttpException } from \"@nestjs/common\";\nimport { UploadFile } from \"../interface/file/upload.file\";\nimport { UploadForm } from \"../interface/file/upload.form\";\nimport { Observable } from \"rxjs/Observable\";\nimport * as formidable from \"formidable\";\n\n@Guard()\nexport class UploadParamGuard implements CanActivate {\n    async canActivate(req, context: ExecutionContext): Promise<boolean> {\n        // 解析from-data请求，获取上传表单中文件、其他字段\n        let file: UploadFile = {} as any, obj: UploadForm = {} as any;\n        let ex: any = \"\";\n        await new Promise((resolve, reject) => {\n            const form = new formidable.IncomingForm();\n            form.parse(req, (err, fields, files) => {\n                if (err) {\n                    reject(new HttpException(\"上传文件请求解析错误:\" + err.toString(), 402));\n                }\n                if (!fields) {\n                    reject(new HttpException(\"表单字段不存在\", 400));\n                }\n                if (!fields.bucketName) {\n                    reject(new HttpException(\"缺少参数bucketName\", 400));\n                }\n                if (!fields.rawName) {\n                    reject(new HttpException(\"缺少参数rawName\", 400));\n                }\n                if (!fields.md5) {\n                    reject(new HttpException(\"缺少参数md5\", 400));\n                }\n                if (!files || !files.file) {\n                    reject(new HttpException(\"文件字段不存在\", 400));\n                }\n                file = files.file;\n                obj = fields;\n                resolve();\n                return;\n            });\n        }).catch(err => {\n            ex = err;\n        });\n        if (ex) throw ex;\n        req.body.uploadFile = file;\n        req.body.uploadForm = obj;\n        return true;\n    }\n}\n"]}