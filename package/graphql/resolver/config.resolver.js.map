{"version":3,"sources":["../src/graphql/resolver/config.resolver.ts"],"names":[],"mappings":"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","file":"config.resolver.js","sourcesContent":["import { Component, UseGuards, UseFilters, HttpException, Inject, UseInterceptors } from \"@nestjs/common\";\nimport { EnableImageWatermark } from \"../../interface/config/enable.image.watermark\";\nimport { ExceptionInterceptor } from \"../../interceptor/exception.interceptor\";\nimport { LocalExceptionFilter } from \"../../exception/local.exception.filter\";\nimport { ImageWatermark } from \"../../interface/config/image.watermark\";\nimport { BucketConfig } from \"../../interface/config/bucket.config\";\nimport { BucketsData } from \"../../interface/config/buckets.data\";\nimport { ImageFormat } from \"../../interface/config/image.format\";\nimport { AudioFormat } from \"../../interface/config/audio.format\";\nimport { VideoFormat } from \"../../interface/config/video.format\";\nimport { UploadFile } from \"../../interface/file/upload.file\";\nimport { Resolver, Query, Mutation } from \"@nestjs/graphql\";\nimport { ConfigService } from \"../../service/config.service\";\nimport { IncomingMessage, IncomingHttpHeaders } from \"http\";\nimport { CommonData } from \"../../interface/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Bucket } from \"../../model/bucket.entity\";\nimport { KindUtil } from \"../../util/kind.util\";\nimport { FileUtil } from \"../../util/file.util\";\nimport { Repository } from \"typeorm\";\nimport * as path from \"path\";\n\n/* 本地存储配置的resolver */\n@Resolver(\"Config\")\n@UseInterceptors(ExceptionInterceptor)\nexport class ConfigResolver {\n\n    // 图片水印方位的集合，九宫格\n    private readonly gravity: Set<string>;\n\n    private readonly _imageFormat: Set<string>;\n\n    private readonly _audioFormat: Set<string>;\n\n    private readonly _videoFormat: Set<string>;\n\n    private readonly _videoResolution: Set<string>;\n\n    constructor(\n        @Inject(FileUtil) private readonly fileUtil: FileUtil,\n        @Inject(KindUtil) private readonly kindUtil: KindUtil,\n        @Inject(ConfigService) private readonly configService: ConfigService,\n        @InjectRepository(Bucket) private readonly bucketRepository: Repository<Bucket>\n    ) {\n        this._imageFormat = new Set([\"raw\", \"webp_damage\", \"webp_undamage\"]);\n        this._audioFormat = new Set([\"raw\", \"mp3\", \"aac\"]);\n        this._videoFormat = new Set([\"raw\", \"vp9\", \"h264\", \"h265\"]);\n        this._videoResolution = new Set([\"raw\", \"p1080\", \"p720\", \"p480\"]);\n        this.gravity = new Set([\"northwest\", \"north\", \"northeast\", \"west\", \"center\", \"east\", \"southwest\", \"south\", \"southeast\"]);\n    }\n\n    /* 空间配置的resolver，与云存储不同，只配置空间名即可，空间名即是store目录下的空间目录名，私有空间要配置token超时与密钥 */\n    @Mutation(\"bucket\")\n    async bucket(req: IncomingMessage, body: BucketConfig): Promise<CommonData> {\n        const { isPublic, name, tokenExpire, tokenSecretKey } = body;\n        // 验证参数存在\n        if (isPublic === undefined || isPublic === null || !name) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        // 验证参数正确与否\n        if (isPublic !== true && isPublic !== false) {\n            throw new HttpException(\"isPublic参数不正确\", 400);\n        }\n        if (!isPublic) {\n            if (!tokenExpire || !tokenSecretKey) {\n                throw new HttpException(\"缺少参数\", 400);\n            } else if (tokenExpire < 0 || tokenExpire > 1800) {\n                throw new HttpException(\"token超时不正确\", 400);\n            }\n        }\n        // 进行保存,如果存在就更新\n        await this.configService.saveBucketConfig(body);\n        return { code: 200, message: \"空间配置保存成功\" };\n    }\n\n    /* 图片保存格式配置*/\n    @Mutation(\"imageFormat\")\n    async imageFormat(req: IncomingMessage, body: ImageFormat): Promise<CommonData> {\n        const format: string = body.format;\n        // 验证参数\n        if (format === undefined || format.length === 0) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        if (!this._imageFormat.has(format)) {\n            throw new HttpException(\"保存格式不正确\", 400);\n        }\n        // 保存格式\n        await this.configService.saveImageFormat(body);\n        return { code: 200, message: \"图片保存格式配置保存成功\" };\n    }\n\n    /* 图片水印启用配置 */\n    @Mutation(\"enableImageWatermark\")\n    async enableImageWatermark(req: IncomingMessage, body: EnableImageWatermark): Promise<CommonData> {\n        // 验证参数\n        const enable: boolean = body.enable;\n        // 验证参数存在\n        if (enable === null || enable === undefined) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        // 验证参数正确\n        if (enable !== true && enable !== false) {\n            throw new HttpException(\"参数enable错误\", 400);\n        }\n        // 保存配置\n        await this.configService.saveEnableImageWatermark(body);\n        return { code: 200, message: \"图片水印启用配置保存成功\" };\n    }\n\n    /* 图片水印配置,其中水印图片以base64编码传输 */\n    @Mutation(\"imageWatermark\")\n    async imageWatermark(req: IncomingMessage, body: ImageWatermark): Promise<CommonData> {\n        // 水印图片临时保存路径\n        let tempPath = \"\";\n        try {\n            const { name, gravity, opacity, x, y, ws } = body;\n            // 验证参数存在，其中数字为0也可以\n            if (!name || !body.base64 || !gravity || (opacity !== 0 && !opacity) || (x !== 0 && !x) || (y !== 0 && !y) || (ws !== 0 && !ws)) {\n                throw new HttpException(\"缺少参数\", 400);\n            }\n            // 验证参数正确\n            if (!this.gravity.has(gravity)) {\n                throw new HttpException(\"不允许的水印图片位置\", 400);\n            }\n            if (!Number.isInteger(x)) {\n                throw new HttpException(\"x偏移不是整数\", 400);\n            }\n            if (!Number.isInteger(y)) {\n                throw new HttpException(\"y偏移不是整数\", 400);\n            }\n            if (!Number.isInteger(opacity)) {\n                throw new HttpException(\"透明度不是整数\", 400);\n            } else if (opacity <= 0) {\n                throw new HttpException(\"透明度小于0\", 400);\n            } else if (opacity > 100) {\n                throw new HttpException(\"透明度大于100\", 400);\n            } else {\n\n            }\n            if (!Number.isInteger(ws)) {\n                throw new HttpException(\"短边自适应比例不是整数\", 400);\n            } else if (ws <= 0) {\n                throw new HttpException(\"短边自适应比例不大于0\", 400);\n            } else {\n                // 暂定短边自适应比例可以大于100\n            }\n            // 保存图片的base64编码为文件，保存目录为临时目录下\n            tempPath = path.resolve(process.cwd(), \"storages\", \"local\", \"temp\", name);\n            await this.fileUtil.write(tempPath, Buffer.from(body.base64, \"base64\"));\n            // 删除base64字符串，太大了\n            delete body.base64;\n            // 上传文件对象，存储了上传文件名、临时保存路径\n            const file: UploadFile = {\n                name,\n                path: tempPath\n            };\n            if (!this.kindUtil.isImage(file.name.substr(file.name.lastIndexOf(\".\") + 1))) {\n                throw new HttpException(\"不允许的水印图片类型\", 400);\n            }\n            // 保存后台水印配置\n            await this.configService.saveImageWatermark(file, body);\n        } catch (err) {\n            throw err;\n        } finally {\n            // 删除保存的临时水印图片，这里有可能没有到保存水印图片这一步就异常了\n            // resolver级别生成的临时水印图片，也应该在这个级别删除，不应该留到Service中\n            if (tempPath) {\n                await this.fileUtil.deleteIfExist(tempPath);\n            }\n        }\n        return { code: 200, message: \"图片水印配置成功\" };\n    }\n\n    /* 音频保存格式配置*/\n    @Mutation(\"audioFormat\")\n    async audioFormat(req: IncomingMessage, body: AudioFormat): Promise<CommonData> {\n        const format: string = body.format;\n        if (!format) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        if (format !== \"raw\" && format !== \"mp3\" && format !== \"aac\") {\n            throw new HttpException(\"音频保存格式不正确\", 400);\n        }\n        // 保存格式到数据库\n        await this.configService.saveAudioFormat(body);\n        return { code: 200, message: \"音频保存格式配置保存成功\" };\n    }\n\n    /* 视频保存配置*/\n    @Mutation(\"videoFormat\")\n    async videoFormat(req: IncomingMessage, body: VideoFormat): Promise<CommonData> {\n        // 视频编码、分辨率\n        const { format, resolution } = body;\n        if (!format || !resolution) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        if (format !== \"raw\" && format !== \"vp9\" && format !== \"h264\" && format !== \"h265\") {\n            throw new HttpException(\"编码格式不正确\", 400);\n        }\n        if (resolution !== \"raw\" && resolution !== \"p1080\" && resolution !== \"p720\" && resolution !== \"p480\") {\n            throw new HttpException(\"分辨率格式不正确\", 400);\n        }\n        // 保存格式到数据库\n        await this.configService.saveVideoFormat(body);\n        return { code: 200, message: \"视频保存格式配置保存成功\" };\n    }\n\n    /* 获取所有空间信息字段 */\n    @Query(\"buckets\")\n    async buckets(req: IncomingMessage): Promise<BucketsData> {\n        // 查询出所有空间的三个字段，其他字段保密\n        const buckets: Array<Bucket> = await this.bucketRepository.createQueryBuilder(\"bucket\")\n            .select([\"bucket.id\", \"bucket.publicOrPrivate\", \"bucket.name\"])\n            .getMany();\n        if (buckets.length !== 2) {\n            throw new HttpException(\"空间配置不存在\", 401);\n        }\n        return { code: 200, message: \"获取空间配置成功\", buckets };\n    }\n}\n"]}